[{"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\index.js":"1","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\App.js":"2","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\reportWebVitals.js":"3","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Header.js":"4","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CartItemDiv.js":"5","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\ReduxReducers\\shoppingCartReducer.js":"6","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\ReduxReducers\\RootReducer.js":"7","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\ReduxReducers\\userReducer.js":"8","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Home.js":"9","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ShopCategory.js":"10","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ProductSmall.js":"11","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ProductBig.js":"12","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CheckOut.js":"13","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CheckOutProductDiv.js":"14","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ProceedToCheckout.js":"15","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\SignIn.js":"16","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\SignUp.js":"17","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\AccountConfirmation.js":"18","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\StripeBtn.js":"19","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\StarReview.js":"20","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CreateReview.js":"21","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Account.js":"22","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\LoginAndSecurity.js":"23","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\EditName.js":"24","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\EditEmail.js":"25","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\EditPassword.js":"26","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\StripContainer.js":"27","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CheckoutForm.js":"28","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Orders.js":"29","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\AddToList.js":"30","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Lists.js":"31"},{"size":839,"mtime":1612040180444,"results":"32","hashOfConfig":"33"},{"size":4178,"mtime":1613498045276,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":5338,"mtime":1612973958075,"results":"36","hashOfConfig":"33"},{"size":1278,"mtime":1612054543282,"results":"37","hashOfConfig":"33"},{"size":2857,"mtime":1612449652506,"results":"38","hashOfConfig":"33"},{"size":259,"mtime":1612142865780,"results":"39","hashOfConfig":"33"},{"size":357,"mtime":1612312863886,"results":"40","hashOfConfig":"33"},{"size":1523,"mtime":1612121054110,"results":"41","hashOfConfig":"33"},{"size":1601,"mtime":1612361813687,"results":"42","hashOfConfig":"33"},{"size":681,"mtime":1612643123330,"results":"43","hashOfConfig":"33"},{"size":8847,"mtime":1613325845299,"results":"44","hashOfConfig":"33"},{"size":1651,"mtime":1612808664575,"results":"45","hashOfConfig":"33"},{"size":2355,"mtime":1612787444985,"results":"46","hashOfConfig":"33"},{"size":475,"mtime":1612292018450,"results":"47","hashOfConfig":"33"},{"size":3007,"mtime":1613068505860,"results":"48","hashOfConfig":"33"},{"size":2596,"mtime":1613068512676,"results":"49","hashOfConfig":"33"},{"size":3401,"mtime":1613068687311,"results":"50","hashOfConfig":"33"},{"size":2113,"mtime":1612389447019,"results":"51","hashOfConfig":"33"},{"size":345,"mtime":1612620963381,"results":"52","hashOfConfig":"33"},{"size":4659,"mtime":1612632380729,"results":"53","hashOfConfig":"33"},{"size":1518,"mtime":1613496268834,"results":"54","hashOfConfig":"33"},{"size":1607,"mtime":1612781961633,"results":"55","hashOfConfig":"33"},{"size":2275,"mtime":1613068422819,"results":"56","hashOfConfig":"33"},{"size":2281,"mtime":1613068371045,"results":"57","hashOfConfig":"33"},{"size":3449,"mtime":1613068442706,"results":"58","hashOfConfig":"33"},{"size":586,"mtime":1612808981589,"results":"59","hashOfConfig":"33"},{"size":3538,"mtime":1613066141430,"results":"60","hashOfConfig":"33"},{"size":3290,"mtime":1613059842112,"results":"61","hashOfConfig":"33"},{"size":4659,"mtime":1613483144497,"results":"62","hashOfConfig":"33"},{"size":2421,"mtime":1613512366561,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1xwy4jg",{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\index.js",[],["138","139"],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\App.js",["140","141","142","143","144"],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\reportWebVitals.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Header.js",["145"],"import React, { useState } from 'react'\r\nimport styles from \"../SCSScomponents/Header.module.scss\"\r\nimport {BsSearch} from \"react-icons/bs\"\r\nimport CartItemDiv from \"./CartItemDiv\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {updateUserAction} from \"../ReduxReducers/userReducer\"\r\n\r\nimport {Link} from \"react-router-dom\"\r\nimport ProductBig from './ProductBig'\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const currentUser = useSelector(state => state.userReducer.currentUser)\r\n\r\n    const cartItems = useSelector(state => state.shoppingCartReducer.shoppingCart)\r\n\r\n    const [state, setState] = useState(()=> ({\r\n        shoppingCartDisplay: \"none\",\r\n        searchResults: [],\r\n        searchContainerDisplay: \"none\"\r\n    }))\r\n\r\n    if (cartItems.length > 0){\r\n        console.log(cartItems[0]._id)\r\n    }\r\n\r\n    let cartItemsTotalPrice = 0;\r\n    let totalCartQuantity = 0;\r\n\r\n    cartItems.forEach(item => {\r\n        totalCartQuantity+= item.quantity\r\n        cartItemsTotalPrice+= item.quantity * item.price\r\n    })\r\n\r\n    const searchOnChange = async (e) => {\r\n\r\n        const {value} = e.target\r\n        if (value.length > 0){\r\n\r\n            setState(ps => ({\r\n                ...ps,\r\n                searchContainerDisplay: \"unset\"\r\n            }))\r\n            try{\r\n                const response = await fetch(`${process.env.REACT_APP_API}api/shop/product/search/${value}`)\r\n                if (response.status !== 200){\r\n                    throw new Error(\"There has been an unexpected error, please try again\")\r\n                }\r\n    \r\n                const data = await response.json()\r\n    \r\n                setState(ps => ({\r\n                    ...ps,\r\n                    searchResults: data.products\r\n                }))\r\n    \r\n                if (data.products.length > 0){\r\n                    console.log(data.products)\r\n                }\r\n    \r\n                else{\r\n                    console.log(\"There are no products\")\r\n                }\r\n    \r\n    \r\n    \r\n    \r\n            } catch(error){\r\n    \r\n                console.log(error)\r\n    \r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            setState(ps => ({\r\n                ...ps,\r\n                searchResults: [],\r\n                searchContainerDisplay: \"none\"\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    const SignOut = ()=> {\r\n        dispatch(updateUserAction(null))\r\n        localStorage.removeItem(\"amazonCloneUser\")\r\n    }\r\n    return (\r\n        <header className={styles.Header}>\r\n\r\n        <div className={styles.example}></div>\r\n\r\n        <Link to=\"/\" className={styles.logoContainer}>\r\n            <img src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\" alt=\"amazon logo\" />\r\n        </Link>\r\n\r\n        <div className={styles.searchContainer} >\r\n            <input type=\"text\" name=\"search\" onChange={searchOnChange} />\r\n            <BsSearch />\r\n            <div className={styles.searchResultsContainer} style={{display: state.searchContainerDisplay}}>\r\n                {state.searchResults.length > 0 ? state.searchResults.map(product => (<Link to={`/shop/product/${product._id}`}>{product.name}</Link>)) : <p>There are no products</p>}\r\n            </div>\r\n        </div>\r\n\r\n            <div className={styles.subNav}>\r\n            <Link to=\"/account\">\r\n                <p>Hello {currentUser ? currentUser.name : \"Stranger\"}</p>\r\n                <p1>Account & Lists</p1>\r\n            </Link>\r\n\r\n            {currentUser ? (<ul>\r\n                <Link className={styles.navLinks} to=\"/\">Home</Link>\r\n                    <Link className={styles.navLinks} to=\"/account\">Your Account</Link>\r\n                    <Link className={styles.navLinks} to=\"/favourites\">Your Favourites</Link>\r\n                    <Link className={styles.navLinks} to=\"/orders\">Your Orders</Link>\r\n                    <Link className={styles.navLinks} to=\"/SignIn\">Your Prime Membership</Link>\r\n                    <Link className={styles.navLinks} to=\"/\" onClick={SignOut}>Sign Out</Link>   \r\n                </ul>) : <ul>\r\n                    <Link className={styles.navLinks} to=\"/\">Home</Link>\r\n                    <Link className={styles.navLinks} to=\"/account\">Your Account</Link>\r\n                    <Link className={styles.navLinks} to=\"/favourites\">Your Favourites</Link>\r\n                    <Link className={styles.navLinks} to=\"/orders \">Your Orders</Link>\r\n                    <Link className={styles.navLinks} to=\"/SignIn\">Your Prime Membership</Link>\r\n                    <Link className={styles.navLinks} to=\"/auth/signin\">Sign In</Link>   \r\n                </ul>}\r\n            </div>\r\n\r\n\r\n            <Link to=\"/\" className={styles.shoppingBagContainer}>\r\n                <img src=\"/images/shopping-bag.svg\" alt=\"shopping bag\"/>\r\n                <p>{totalCartQuantity}</p>\r\n\r\n                <div className={styles.cartDropdown} >\r\n                    <div className=\"cart-items\">\r\n                    {cartItems.length ? cartItems.map(cartItem => <CartItemDiv cartItem={cartItem} />) : <p>Your Cart Is Empty</p>}\r\n                    </div>\r\n                    <p>Total Price: £{cartItemsTotalPrice.toFixed(2)}</p>\r\n                    <Link to=\"/checkout\">GO TO CHECKOUT</Link>\r\n                </div>\r\n\r\n        </Link>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CartItemDiv.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\ReduxReducers\\shoppingCartReducer.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\ReduxReducers\\RootReducer.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\ReduxReducers\\userReducer.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Home.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ShopCategory.js",["146","147","148"],"import React, { useState, useEffect } from 'react'\r\nimport {useParams, Redirect } from \"react-router-dom\"\r\nimport ProductSmall from './ProductSmall'\r\nimport styles from \"../SCSScomponents/ShopCategory.module.scss\"\r\n\r\nfunction ShopCategory() {\r\n\r\n    const [state, setState] = useState(()=> ({\r\n        loading: true,\r\n        products: []\r\n    }))\r\n    const {category} = useParams()\r\n\r\n    // if (category !== \"books\" || category !== \"kitchen\"){\r\n    //     <Redirect to=\"/\" />\r\n    // }\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(category)\r\n\r\n        fetch(`${process.env.REACT_APP_API}api/shop/category/${category}`).then(res => {\r\n            if (res.status === 200){\r\n                return res.json()\r\n            }\r\n\r\n            else{\r\n                console.log(\"theres an error\")\r\n            }\r\n        }).then(data => {\r\n            console.log(data)\r\n\r\n            setState(ps => ({\r\n                ...ps,\r\n                loading: false,\r\n                products: data\r\n            }))\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        {/* {category !== \"books\" ? (<Redirect to=\"/\" />) : category !== \"kitchen\" ? (<Redirect to=\"/\" />) : false} */}\r\n        {state.products ? state.products.map(product => (\r\n            <ProductSmall\r\n            to={`/shop/product/${product._id}`}\r\n            frontImg={product.images[0]}\r\n            name={product.name}\r\n            reviewsLength={product.reviews.length}\r\n            price={product.price}\r\n            />\r\n\r\n\r\n        )): false}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShopCategory\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ProductSmall.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ProductBig.js",["149","150","151","152","153","154","155"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from \"../SCSScomponents/ProductBig.module.scss\"\r\nimport {addItemToCartAction} from \"../ReduxReducers/shoppingCartReducer\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {AiFillPlaySquare} from \"react-icons/ai\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport StarReview from './StarReview'\r\nimport CreateReview from './CreateReview'\r\nimport AddToList from './AddToList'\r\n\r\nfunction ProductBig() {\r\n\r\n    const dispatch = useDispatch()\r\n    const shoppingCart = useSelector(state => state.shoppingCartReducer.shoppingCart)\r\n\r\n    // if (shoppingCart[0]){\r\n    //     alert(shoppingCart[0].quantity)\r\n    // }\r\n    const {productID} = useParams()\r\n\r\n    const [state, setState] = useState(()=> ({\r\n        product: null,\r\n        loading: true,\r\n        currentImg: 0,\r\n        quantity: 1,\r\n        review: {\r\n            average: null,\r\n            starsPercentages: []\r\n        }\r\n        \r\n    }))\r\n\r\n\r\n    useEffect(async () => {\r\n            try{\r\n\r\n                const response = await fetch(`${process.env.REACT_APP_API}api/shop/product/${productID}`)\r\n\r\n                if (response.status !== 200){\r\n                    throw new Error(\"There has been an unexpected error\")\r\n                }\r\n\r\n                const data = await response.json()\r\n\r\n                let average = 0\r\n                const length = data.reviews.length\r\n\r\n                let starsObj ={\r\n                    1: 0,\r\n                    2: 0,\r\n                    3: 0,\r\n                    4: 0,\r\n                    5: 0,\r\n                }\r\n\r\n                data.reviews.forEach(review => {\r\n                    const star = review.stars\r\n                    average+= star\r\n                    starsObj[star] = starsObj[star] + 1\r\n                })\r\n\r\n                \r\n\r\n                console.log(starsObj)\r\n\r\n\r\n\r\n                    setState(ps => ({\r\n                        ...ps,\r\n                        product: data,\r\n                        loading: false,\r\n                        review: {\r\n                            average: average / length,\r\n                            starsPercentages: [(starsObj[1]/length).toFixed(2), (starsObj[2] / length).toFixed(2), (starsObj[3]/ length).toFixed(2), (starsObj[4] / length).toFixed(2), (starsObj[5] / length).toFixed(2) ]\r\n                        }\r\n\r\n                    }))\r\n                    console.log(data)\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n        \r\n    }, [productID])\r\n\r\n    // const applyFocusToButton = (e) => {\r\n    //     e.target.focus\r\n    // }\r\n\r\n    const addProductToBag = () => {\r\n        dispatch(addItemToCartAction(state.product, state.quantity))\r\n    }\r\n    \r\n    const increaseQuantity = () => {\r\n        setState(ps => ({\r\n            ...ps,\r\n            quantity: ps.quantity + 1\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    const decreaseQuantity = () => {\r\n\r\n        if (state.quantity > 1){\r\n            setState(ps => ({\r\n                ...ps,\r\n                quantity: ps.quantity - 1\r\n            }))\r\n        }\r\n    }\r\n\r\n    const postReview = async (e) => {\r\n        try{\r\n            const response = fetch(`${process.env.REACT_APP_API}api/shop/product/reviews/post`)\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"There has been an unexpected error\")\r\n            }\r\n\r\n            setState(ps => ({\r\n                ...ps,\r\n                product: {...ps.product, reviews: [...ps.product.reviews, state.review]}\r\n            }))\r\n\r\n\r\n\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n        //calculating the average rating\r\n        let average = 0\r\n        let globalRating = 0\r\n\r\n        // state.product.reviews.forEach(review => {\r\n\r\n            \r\n\r\n        // })\r\n\r\n        const changeImg = () => {\r\n\r\n        }\r\n        \r\n        \r\n    return state.product ? (\r\n\r\n        <div className={styles.ProductBig}>\r\n\r\n            <div className={styles.bigContainer1}>\r\n                \r\n                    <div className={styles.imgsSection}>\r\n                    <img className={styles.bigImg} src={state.product.images[state.currentImg]} alt=\"state.product\" />\r\n                    <div className={styles.miniImgs}>\r\n                        {state.product.images.map((img,index) => <img src={img} alt=\"state.product\" style={{border: index === state.currentImg ? \"1px solid red\" : false}} onClick={()=> setState(ps => ({...ps, currentImg: index}))}/> )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.detailsContainer1}>\r\n                    <p style={{fontSize: \"20px\"}}>Title: {state.product.name}</p>\r\n                    <p>Seller: <Link style={{textDecoration:\"none\", color: \"#007185\" }} to={`/${state.product.seller}`}>{state.product.seller} </Link></p>\r\n                    <p>category: <Link to={`/shop/category/${state.product.category}`} > {state.product.category}</Link></p>\r\n\r\n                    {state.product.sizes.length > 0 ? state.product.sizes.map(size => (<p>{size}</p>)) : false}\r\n\r\n                    {state.product.description[0].title && state.product.description[0].info ? state.product.description.map(description => (<p>{description.title} : {description.info}</p>)) : state.product.description[0].info && !state.product.description[0].title ? state.product.description.map(description => (<p>{description.info}</p>)) : false}\r\n                    \r\n\r\n                </div>\r\n\r\n                <div className={styles.detailsContainer2}>\r\n                    <p style={{color: \"red\"}}>£{state.product.price.toFixed(2)}</p>\r\n\r\n                    <p>Delivery at no extra cost for Prime Members</p>\r\n\r\n                    <p style={{color: \"green\"}}>In Stock</p>\r\n\r\n\r\n                    <div className={styles.quantity}>\r\n                        <p>Quantity:</p> \r\n                        {state.quantity > 1 ? <button onClick={decreaseQuantity}>-</button> : false}\r\n                        <p>{state.quantity}</p>\r\n                        <button onClick={increaseQuantity}>+</button>\r\n                    </div>\r\n                    <button className={styles.addToBasketBtn} onClick={addProductToBag}>\r\n                    <div className={styles.logoContainers}>\r\n                    <img style={{width: \"25px\"}} src=\"/images/shopping-bag.svg\" alt=\"shopping bag\"/> \r\n                    </div><p>Add To Basket</p>\r\n                    </button>\r\n                    <Link to=\"/shop/checkout\" className={styles.buyNowBtn}>\r\n                    <div className={styles.logoContainers}>\r\n                    <AiFillPlaySquare size=\"25\" />\r\n                    </div>\r\n                    <p>Buy Now</p></Link>\r\n                    <AddToList product={state.product} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.bigContainer2}>\r\n\r\n\r\n                <div className={styles.intro}>\r\n                    <p>Customer reviews</p>\r\n\r\n                    <StarReview value={state.review.average} />\r\n\r\n                    <div className={styles.starsPercentageContainer}>\r\n                        {state.review.starsPercentages.map((percentage,i) => \r\n                        <div className={styles.percentage}>\r\n                            <p>{i+1} star</p>\r\n                            <div style={{width: \"300px\", height: \"20px\", backgroundColor: \"#e4e5e9\"}}>\r\n                                <div style={{width: `${percentage * 100}%`, height: \"20px\", backgroundColor: \"#ffc107\"}}></div>\r\n                            </div>\r\n                            <p>{percentage * 100}%</p>\r\n\r\n                        </div>\r\n\r\n                        )}\r\n                    </div>\r\n                    <div className={styles.createReview}>\r\n                        <p>Review this product</p>\r\n                        <p>Share your thoughts with other customers</p>\r\n                        <Link to={`/review/create-review/edit/product/${state.product._id}`}>Create a review</Link>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n                <div className={styles.reviewsContainer}>\r\n\r\n                    {state.product.reviews.length > 0 ? state.product.reviews.map(review => (\r\n                        <div className={styles.review}>\r\n                            <Link to={`/${review.userID}`}>USER</Link>\r\n                            <StarReview value={review.stars} />\r\n                            <p>{review.headline}</p>\r\n                            <p>{review.written}</p>\r\n                        </div>\r\n                    )) : <p>There are no reviews available</p>}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n        ) : false\r\n}\r\n\r\nexport default ProductBig\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CheckOut.js",["156","157","158","159"],"import React from 'react'\r\nimport styles from \"../SCSScomponents/CheckOut.module.scss\"\r\nimport CheckOutProductDiv from './CheckOutProductDiv'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {removeAllItemsFromCart} from \"../ReduxReducers/shoppingCartReducer\"\r\nimport {Link} from \"react-router-dom\"\r\nimport ProceedToCheckout from './ProceedToCheckout'\r\nimport StripeBtn from './StripeBtn'\r\nimport StripContainer from './StripContainer'\r\n\r\n\r\n\r\nfunction CheckOut() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let totalQuantity= 0\r\n    let totalPrice = 0\r\n\r\n    const cartItems = useSelector(state => state.shoppingCartReducer.shoppingCart)\r\n    console.log(cartItems)\r\n    \r\n    cartItems.forEach(product => {\r\n        totalQuantity+= product.quantity\r\n        totalPrice+= product.quantity * product.price\r\n    });\r\n\r\nconsole.log(cartItems)\r\n    return (\r\n        <div className={styles.CheckOut}>\r\n        <div className={styles.firstHalf}>\r\n\r\n            <div className={styles.intro}>\r\n                <h1>Shopping Basket</h1>\r\n\r\n                <Link onClick={()=> dispatch(removeAllItemsFromCart())}>Remove all items</Link>\r\n\r\n            </div>\r\n\r\n            <div className={styles.productsContainer}>\r\n                {cartItems.length > 0 ? cartItems.map(product => (<CheckOutProductDiv\r\n                // frontImg={product.images[0]}\r\n                product={product}\r\n                 />)) : false}\r\n            </div>\r\n        </div>\r\n\r\n            <div className={styles.othersContainer}>\r\n                    <StripContainer />\r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckOut\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CheckOutProductDiv.js",["160"],"import React, { useEffect, useState } from 'react'\r\nimport styles from \"../SCSScomponents/CheckOutProductDiv.module.scss\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {addItemToCartAction, reduceItemFromCartAction, removeItemFromCartAction} from \"../ReduxReducers/shoppingCartReducer\"\r\n\r\n\r\nfunction CheckOutProductDiv(props) {\r\n\r\n    const [state, setState] = useState(()=> ({\r\n        productOpacity: 0\r\n    }))\r\n\r\n    useEffect(()=> {\r\n        setState(ps => ({\r\n            ...ps,\r\n            productOpacity: 1\r\n        }))\r\n    },[])\r\n\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const product = props.product\r\n\r\n\r\n\r\n    const increaseQuantity = () => {\r\n        dispatch(addItemToCartAction(product))\r\n    }\r\n\r\n    const decreaseQuantity = () => {\r\n        dispatch(reduceItemFromCartAction(product))\r\n    }\r\n\r\n    const deleteItem = ()=>{\r\n        setState(ps => ({\r\n            ...ps,\r\n            productOpacity: 0\r\n        }))\r\n        setTimeout(()=> {\r\n            dispatch(removeItemFromCartAction(product))\r\n        }, 1000)\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.Product} style={{opacity: state.productOpacity}}>\r\n            <img src={product.images[0]} alt=\"Product\" />\r\n            <div className={styles.details}>\r\n                <div className={styles.intro}>\r\n                    <p className={styles.name}>{product.name}</p>\r\n                    <p className={styles.price}>£{product.price.toFixed(2)}</p>\r\n                </div>\r\n                <p>Seller: {product.seller}</p>\r\n                <p>In Stock</p>\r\n                <div className={styles.quantity}>\r\n                    <div>\r\n                        <button onClick={decreaseQuantity} style={{borderRightStyle: \"solid 1px black\"}}>-</button>\r\n                        <p>{product.quantity}</p>\r\n                        <button onClick={increaseQuantity} style={{borderLeftStyle: \"solid 1px black\"}}>+</button>\r\n                    </div>\r\n\r\n                        <button onClick={deleteItem}>Delete</button>\r\n                        <button>Save for later</button>\r\n                </div>\r\n                <Link to={`/shop/category/${product.category}`}>See more like this</Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckOutProductDiv\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\ProceedToCheckout.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\SignIn.js",["161"],"import React, { useEffect, useState } from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport styles from \"../SCSScomponents/SignIn.module.scss\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {updateUserAction} from \"../ReduxReducers/userReducer\"\r\n\r\nfunction SignIn() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [state, setState] = useState(()=> ({\r\n        email: \"exhzimlhddryhlleun@miucce.com\",\r\n        password: \"Password\",\r\n        rememberMe: true,\r\n        loading: false\r\n    }))\r\n\r\n    const setInputValueToState = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const setInputCheckToState = (e)=>{\r\n        const {name} = e.target\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            [name]: !ps.[name]\r\n        }))\r\n    }\r\n\r\n    const signIn = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            loading: true\r\n        }))\r\n\r\n        try{\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/auth/account/signin`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({email: state.email, password: state.password})\r\n            })\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"There Has Been An Unexpected Issue\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n                console.log(data)\r\n\r\n            if (data.user){\r\n                dispatch(updateUserAction(data.user))\r\n                \r\n\r\n                if (state.rememberMe){\r\n                    localStorage.setItem(\"amazonCloneUser\", JSON.stringify(data.user))\r\n                }\r\n            }\r\n\r\n            else{\r\n                console.log(data.message)\r\n            }\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className={styles.SignIn}>\r\n\r\n        <div className={styles.container}>\r\n            <p style={styles.title}>Sign In</p>\r\n\r\n            <form onSubmit={signIn}>\r\n                <input type=\"email\" name=\"email\" required onChange={setInputValueToState} value={state.email} placeholder=\"Email\"/>\r\n                <input type=\"password\" name=\"password\" required onChange={setInputValueToState} value={state.password} placeholder=\"Password\"/>\r\n                <div>\r\n                    <input type=\"checkbox\" name=\"rememberMe\" onChange={setInputCheckToState} checked={state.rememberMe} />\r\n                <label for=\"rememberMe\">Remember Me</label>\r\n                </div>\r\n                <input className={styles.submitInput} type=\"submit\" value=\"Sign In\" />\r\n            </form>\r\n\r\n\r\n            <Link to=\"/auth/signup\">Create your amazon account</Link>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\SignUp.js",["162"],"import React, { useEffect, useState } from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport styles from \"../SCSScomponents/SignUp.module.scss\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {updateUserAction} from \"../ReduxReducers/userReducer\"\r\n\r\nfunction SignUp() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [state, setState] = useState(()=> ({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        loading: false\r\n    }))\r\n\r\n    const setInputValueToState = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const SignUp = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            loading: true\r\n        }))\r\n\r\n        try{\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/auth/account/signup`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({name: state.name,email: state.email, password: state.password})\r\n            })\r\n    \r\n            console.log(response)\r\n    \r\n            \r\n    \r\n            if (response.status !== 200){\r\n                throw new Error(\"There Has Been An Unexpected Issue\")\r\n            }\r\n    \r\n            const data = await response.json()\r\n            \r\n            if (data.user){\r\n                dispatch(updateUserAction(data.user))\r\n            }\r\n    \r\n            else{\r\n                console.log(data.message)\r\n            }\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className={styles.SignUp}>\r\n\r\n        <div className={styles.container}>\r\n            <p style={styles.title}>Sign Up</p>\r\n\r\n            <form onSubmit={SignUp}>\r\n                <input type=\"text\" name=\"name\" required onChange={setInputValueToState} value={state.name} placeholder=\"Name\"/>\r\n                <input type=\"email\" name=\"email\" required onChange={setInputValueToState} value={state.email} placeholder=\"Email\"/>\r\n                <input type=\"password\" name=\"password\" required onChange={setInputValueToState} value={state.password} placeholder=\"Password\"/>\r\n\r\n                <input className={styles.submitInput} type=\"submit\" value=\"Sign Up\" />\r\n            </form>\r\n\r\n\r\n            <Link to=\"/auth/signin\">Already have an amazon account? Sign In</Link>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\AccountConfirmation.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\StripeBtn.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\StarReview.js",["163"],"import React, { useState } from 'react'\r\nimport {FaStar} from \"react-icons/fa\"\r\n\r\n\r\nfunction StarReview(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n           {[...Array(5)].map((star, i) => <FaStar size={40} style={{color: props.value >= (i+1) ? \"#ffc107\" : \"#e4e5e9\" }}/>)}              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarReview\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CreateReview.js",["164","165"],"import React, { useEffect, useState } from 'react'\r\nimport {FaStar} from \"react-icons/fa\"\r\nimport { useSelector } from 'react-redux'\r\nimport styles from \"../SCSScomponents/CreateReview.module.scss\"\r\nimport {useParams} from \"react-router-dom\"\r\n\r\n\r\nfunction CreateReview(props) {\r\n\r\n    const currentUser = useSelector(state => state.userReducer.currentUser)\r\n\r\n    const {productID} = useParams()\r\n\r\n    const [state, setState] = useState(()=> ({\r\n        stars: null,\r\n        headline: \"\",\r\n        written: \"\",\r\n        product: null\r\n    }))\r\n\r\n    useEffect(async () => {\r\n        \r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/shop/product/${productID}`)\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"There has been an unexpected error\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            const existingReview = data.reviews.find(review => review.authorID === currentUser._id )\r\n\r\n            if (existingReview){\r\n                const {stars,headline,written} = existingReview\r\n                setState(ps => ({\r\n                    ...ps,\r\n                    stars: stars,\r\n                    headline: headline,\r\n                    written: written,\r\n                    product: data,\r\n                }))\r\n\r\n            }\r\n\r\n            else{\r\n                setState(ps => ({\r\n                    ...ps,\r\n                    product: data,\r\n                }))\r\n            }\r\n\r\n            \r\n\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    },[])\r\n\r\n    const setInputValueToState = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    const postReview = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n\r\n        if (!state.stars){\r\n            alert(\"select a star\")\r\n        }\r\n        else{\r\n\r\n        try{\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/shop/product/reviews/post`, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                productID: productID,\r\n                userID: currentUser._id,\r\n                stars: state.stars,\r\n                headline: state.headline,\r\n                written: state.written,\r\n\r\n            })\r\n        })\r\n\r\n        console.log(response)\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"There has been an unexpected error\")\r\n            }\r\n\r\n\r\n            const data = await response.json()\r\n\r\n            alert(\"REVIEW HAS BEEN SAVED\")\r\n\r\n            setState(ps => ({\r\n                ...ps,\r\n                stars: null,\r\n                headline: \"\",\r\n                written: \"\"\r\n            }))\r\n\r\n            console.log(data)\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    }\r\n\r\n    return (\r\n        state.product ? (<form onSubmit={postReview} className={styles.PostReview}>\r\n\r\n            <div className={styles.intro}>\r\n                <p>Create Review</p>\r\n\r\n                <div>\r\n                    <img src={state.product.images[0]} alt=\"Product\" />\r\n                    <p>{state.product.name}</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div className={styles.overallRating}>\r\n                <p>Overall rating</p>\r\n                <div>\r\n                    {[...Array(5)].map((star, i) => <FaStar clasName={styles.stars} size={40} style={{color: state.stars >= (i+1) ? \"#ffc107\" : \"#e4e5e9\" }} onClick={() => setState(ps => ({\r\n                        ...ps,\r\n                        stars: i+1\r\n                    }))} />)}              \r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={styles.comments}>\r\n                <div>\r\n                    <p>Add a headline</p>\r\n                    <input type=\"text\" required name=\"headline\" placeholder=\"What's most important to know\" value={state.headline} onChange={setInputValueToState} />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Add a written review</p>\r\n                    <textarea name=\"written\" required placeholder=\"What did you like or dislike? What did you use this product for\" value={state.written} onChange={setInputValueToState}></textarea>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <input className={styles.submitBtn} type=\"submit\" value=\"Submit\" />\r\n            \r\n        </form>) : false\r\n    )\r\n}\r\n\r\nexport default CreateReview\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Account.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\LoginAndSecurity.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\EditName.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\EditEmail.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\EditPassword.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\StripContainer.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\CheckoutForm.js",["166"],"import React, { useState } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {removeAllItemsFromCart} from \"../ReduxReducers/shoppingCartReducer\"\r\nimport {updateUserAction} from \"../ReduxReducers/userReducer\"\r\nimport { CardElement, useStripe, useElements, CardNumberElement } from \"@stripe/react-stripe-js\";\r\nimport styles from \"../SCSScomponents/CheckoutForm.module.scss\"\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const dispatch = useDispatch()\r\n  const cartItems = useSelector(state => state.shoppingCartReducer.shoppingCart)\r\n  const currentUser = useSelector(state => state.userReducer.currentUser)\r\n\r\n  const [state, setState] = useState(()=> ({\r\n    showModule: false\r\n  }))\r\n\r\n  let cartItemsTotalPrice = 0;\r\n\r\n  cartItems.forEach(item => {\r\n      cartItemsTotalPrice+= item.quantity * item.price\r\n  })\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n    try{\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card: elements.getElement(CardElement),\r\n        });\r\n\r\n        if (!error) {\r\n            console.log(\"Stripe 23 | token generated!\", paymentMethod);\r\n            //send token to backend here\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/payment/charge`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({amount: (cartItemsTotalPrice * 100).toFixed(0), products: cartItems, paymentID: paymentMethod.id, userID: currentUser._id})\r\n                })\r\n        \r\n            if (response.status !== 200){\r\n                throw new Error(\"Payment has failed\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            dispatch(updateUserAction(data.user))\r\n            localStorage.setItem(\"amazonCloneUser\", JSON.stringify(data.user))\r\n\r\n            toggleModule()\r\n\r\n            dispatch(removeAllItemsFromCart())\r\n\r\n            console.log(\"payment has gone through\")\r\n        }\r\n        \r\n        else {\r\n        console.log(error.message);\r\n        }\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n  };\r\n\r\n  const CARD_OPTIONS = {\r\n    iconStyle: 'solid',\r\n    style: {\r\n      fontSize: \"40px\",\r\n      base: {\r\n        iconColor: '#c4f0ff',\r\n        color: '#fff',\r\n        fontWeight: 500,\r\n        fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n        fontSize: '40px',\r\n        fontSmoothing: 'antialiased',\r\n        ':-webkit-autofill': {color: '#fce883'},\r\n        '::placeholder': {color: '#87bbfd'},\r\n      },\r\n      invalid: {\r\n        iconColor: '#ffc7ee',\r\n        color: '#ffc7ee',\r\n      },\r\n    },\r\n  };\r\n\r\n  const toggleModule = () => {\r\n    setState(ps => ({\r\n      ...ps,\r\n      showModule: !ps.showModule\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!state.showModule && cartItems.length === 0 ? <h1>There are no items in your basket</h1>: !state.showModule ? (<form className={styles.form} options={CARD_OPTIONS} onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\r\n        <CardElement className={styles.cardElement}/>\r\n        <button>Pay</button>\r\n      </form>) : (<div className={styles.module}>\r\n        <h1>Your payment has gone through, thank you</h1>\r\n        <button onClick={toggleModule}>EXIT</button>\r\n        \r\n      </div>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Orders.js",[],"C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\AddToList.js",["167","168"],"import React, { useEffect, useState } from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\"\r\nimport styles from \"../SCSScomponents/AddToList.module.scss\"\r\nimport {AiOutlineArrowDown, AiOutlinePlus} from \"react-icons/ai\"\r\n\r\nfunction AddToList(props) {\r\n\r\n    const currentUser = useSelector(state => state.userReducer.currentUser)\r\n\r\n\r\n    const [state, setState] = useState(()=> ({\r\n        listNames: null,\r\n        newListName: \"\",\r\n        modalDisplay: false\r\n    }))\r\n\r\n    useEffect(async ()=> {\r\n        try{\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/list/getAllListNames/${currentUser._id}`)\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"there has been an unexpected error\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            setState(ps => ({\r\n                ...ps,\r\n                listNames: data.listNames\r\n            }))\r\n\r\n            console.log(data)\r\n\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n\r\n    const setInputValueToState = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setState(ps => ({\r\n            ...ps,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const createNewList = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        // setState(ps => ({\r\n        //     ...ps,\r\n        //     loading: true\r\n        // }))\r\n\r\n        try{\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/list/create`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({userID: currentUser._id, newListName: state.newListName})\r\n            })\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"There Has Been An Unexpected Issue\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            toggleModal()\r\n\r\n                console.log(data)\r\n\r\n            \r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const addToList = async (e) => {\r\n        \r\n        const {value} = e.target\r\n        console.log(value)\r\n\r\n        try{\r\n            const response = await fetch(`${process.env.REACT_APP_API}api/list/add`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({userID: currentUser._id, product: props.product, listName: value})\r\n            })\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(\"There has been an unexpected error\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            console.log(data)\r\n\r\n\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    console.log(props.product)\r\n\r\n    const toggleModal = () => {\r\n        setState(ps => ({\r\n            ...ps,\r\n            modalDisplay: !ps.modalDisplay\r\n        }))\r\n        console.log(\"toggle\")\r\n    }\r\n\r\n    return (\r\n        <div className={styles.AddToList}>\r\n\r\n            {currentUser ? (<button className={styles.mainBtn}>\r\n                <span>Add To List</span>\r\n                <AiOutlineArrowDown />                \r\n            </button>) : <Link to=\"/auth/signin\"  className={styles.mainBtn}>\r\n                <span>Add To List</span>\r\n                <AiOutlineArrowDown />\r\n            </Link>}\r\n\r\n            <div className={styles.dropdown} >\r\n\r\n                <div className={styles.namesContainer}>\r\n                    {state.listNames ? state.listNames.map(name =>  <input type=\"button\" onClick={addToList} value={name} />) : <p>There are no lists</p>}\r\n\r\n                </div>\r\n\r\n                \r\n                \r\n                \r\n                <button className={styles.addBtn} onClick={toggleModal}>\r\n                    <AiOutlinePlus/>\r\n                    <span>Create A New List</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div className={styles.listModal}  style={state.modalDisplay ? {display: \"flex\"} : {display: \"none\"}}>\r\n                <form onSubmit={createNewList}>\r\n                    <input type=\"text\" name=\"newListName\" required value={state.newListName} placeholder=\"New List Name\" onChange={setInputValueToState} />\r\n\r\n                    <input type=\"submit\" value=\"Add New List\" /> \r\n                </form>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToList\r\n","C:\\Users\\hadan\\OneDrive\\Desktop\\ProjectFolder\\AMAZON\\client\\src\\JScomponents\\Lists.js",["169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":12},{"ruleId":"175","severity":1,"message":"179","line":15,"column":9,"nodeType":"177","messageId":"178","endLine":15,"endColumn":34},{"ruleId":"175","severity":1,"message":"180","line":19,"column":8,"nodeType":"177","messageId":"178","endLine":19,"endColumn":20},{"ruleId":"175","severity":1,"message":"181","line":37,"column":11,"nodeType":"177","messageId":"178","endLine":37,"endColumn":15},{"ruleId":"182","severity":1,"message":"183","line":50,"column":6,"nodeType":"184","endLine":50,"endColumn":8,"suggestions":"185"},{"ruleId":"175","severity":1,"message":"186","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":18},{"ruleId":"175","severity":1,"message":"187","line":2,"column":20,"nodeType":"177","messageId":"178","endLine":2,"endColumn":28},{"ruleId":"175","severity":1,"message":"188","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":39,"column":8,"nodeType":"184","endLine":39,"endColumn":10,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"191","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":20},{"ruleId":"175","severity":1,"message":"192","line":15,"column":11,"nodeType":"177","messageId":"178","endLine":15,"endColumn":23},{"ruleId":"182","severity":1,"message":"193","line":35,"column":15,"nodeType":"194","endLine":84,"endColumn":6},{"ruleId":"175","severity":1,"message":"195","line":113,"column":11,"nodeType":"177","messageId":"178","endLine":113,"endColumn":21},{"ruleId":"175","severity":1,"message":"196","line":135,"column":13,"nodeType":"177","messageId":"178","endLine":135,"endColumn":20},{"ruleId":"175","severity":1,"message":"197","line":136,"column":13,"nodeType":"177","messageId":"178","endLine":136,"endColumn":25},{"ruleId":"175","severity":1,"message":"198","line":144,"column":15,"nodeType":"177","messageId":"178","endLine":144,"endColumn":24},{"ruleId":"175","severity":1,"message":"199","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":25},{"ruleId":"175","severity":1,"message":"200","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":17},{"ruleId":"175","severity":1,"message":"201","line":24,"column":9,"nodeType":"177","messageId":"178","endLine":24,"endColumn":22},{"ruleId":"175","severity":1,"message":"202","line":25,"column":9,"nodeType":"177","messageId":"178","endLine":25,"endColumn":19},{"ruleId":"175","severity":1,"message":"203","line":4,"column":9,"nodeType":"177","messageId":"178","endLine":4,"endColumn":20},{"ruleId":"175","severity":1,"message":"204","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"204","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"205","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"193","line":21,"column":15,"nodeType":"194","endLine":58,"endColumn":6},{"ruleId":"182","severity":1,"message":"206","line":58,"column":7,"nodeType":"184","endLine":58,"endColumn":9,"suggestions":"207"},{"ruleId":"175","severity":1,"message":"208","line":5,"column":47,"nodeType":"177","messageId":"178","endLine":5,"endColumn":64},{"ruleId":"182","severity":1,"message":"193","line":18,"column":15,"nodeType":"194","endLine":38,"endColumn":6},{"ruleId":"182","severity":1,"message":"209","line":38,"column":8,"nodeType":"184","endLine":38,"endColumn":10,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"193","line":16,"column":15,"nodeType":"194","endLine":36,"endColumn":6},{"ruleId":"182","severity":1,"message":"209","line":36,"column":8,"nodeType":"184","endLine":36,"endColumn":10,"suggestions":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'addLocalStorageCartAction' is defined but never used.","'SecurityEdit' is defined but never used.","'cart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'ProductBig' is defined but never used.","'Redirect' is defined but never used.","'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["215"],"'CreateReview' is defined but never used.","'shoppingCart' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'postReview' is assigned a value but never used.","'average' is assigned a value but never used.","'globalRating' is assigned a value but never used.","'changeImg' is assigned a value but never used.","'ProceedToCheckout' is defined but never used.","'StripeBtn' is defined but never used.","'totalQuantity' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser._id' and 'productID'. Either include them or remove the dependency array.",["216"],"'CardNumberElement' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser._id'. Either include it or remove the dependency array.",["217"],["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"225","fix":"227"},"Update the dependencies array to be: [dispatch]",{"range":"228","text":"229"},"Update the dependencies array to be: [category]",{"range":"230","text":"231"},"Update the dependencies array to be: [currentUser._id, productID]",{"range":"232","text":"233"},"Update the dependencies array to be: [currentUser._id]",{"range":"234","text":"235"},{"range":"236","text":"235"},[1651,1653],"[dispatch]",[1032,1034],"[category]",[1591,1593],"[currentUser._id, productID]",[1081,1083],"[currentUser._id]",[1000,1002]]